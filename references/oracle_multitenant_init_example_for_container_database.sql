-- This script is for **Container** Database if Multitenant is enabled

--Oracle log reader
--You need to run the initial setup part on local machine.
--Execute the following query from SQLPLUS to check whether archive logging is enabled or not.

--SQL> SELECT LOG_MODE FROM V$DATABASE;

--LOG_MODE
--------------------------
--ARCHIVELOG

--If the result shows LOG_MODE is not 'ARCHIVELOG', it means archive logging is disabled. Execute the following commands to turn it on.

--SQL> SHUTDOWN IMMEDIATE;
--SQL> CONNECT SYS/PASSWORD AS SYSDBA;
--SQL> STARTUP MOUNT;
--SQL> ALTER DATABASE ARCHIVELOG;
--SQL> ALTER DATABASE OPEN;

--Then execute the following to specify a local directory as the archive log directory (a.k.a archive destination).

--SQL> ALTER SYSTEM SET LOG_ARCHIVE_DEST_1='LOCATION=C:\app\11gr2_archive';

--Execute the following query to verify the archive destination.

--SQL> SELECT DESTINATION FROM V$ARCHIVE_DEST WHERE DEST_NAME='LOG_ARCHIVE_DEST_1';

--DESTINATION
-------------------------------------------------------------------------------
--C:\app\11gr2_archive


-- Enable minimal database-level supplemental logging
ALTER DATABASE ADD SUPPLEMENTAL LOG DATA;

-- If setting Oracle LogReader Adapter preference "pdb_supplemental_logging_level" to "database" (the default value is "table"),
-- please enable PRIMARY KEY and UNIQUE KEY database-level supplemental logging in **Pluggable** database instead of below
-- table-level supplemental logging. (See oracle_multitenant_init_example_for_pluggable_database.sql)

-- Enable table-level supplemental logging
ALTER TABLE SYS.ARGUMENT$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.ARGUMENT$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.ATTRIBUTE$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.ATTRIBUTE$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.COLLECTION$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.COLLECTION$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.COLTYPE$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.COLTYPE$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.DEFERRED_STG$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.DEFERRED_STG$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.INDCOMPART$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.INDCOMPART$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.INDPART$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.INDPART$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.INDSUBPART$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.INDSUBPART$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.LOB$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.LOB$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.LOBCOMPPART$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.LOBCOMPPART$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.LOBFRAG$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.LOBFRAG$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.MLOG$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.MLOG$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.NTAB$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.NTAB$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.OPQTYPE$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.OPQTYPE$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.PROCEDUREINFO$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.PROCEDUREINFO$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.RECYCLEBIN$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.RECYCLEBIN$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.SEQ$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.SEQ$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.SNAP$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.SNAP$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.TABPART$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.TABPART$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.TABCOMPART$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.TABCOMPART$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.TABSUBPART$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.TABSUBPART$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.TYPE$ ADD SUPPLEMENTAL LOG DATA (PRIMARY KEY) COLUMNS;
ALTER TABLE SYS.TYPE$ ADD SUPPLEMENTAL LOG DATA (UNIQUE INDEX) COLUMNS;
ALTER TABLE SYS.TYPE$ ADD SUPPLEMENTAL LOG DATA (ALL) COLUMNS;

-- Create the LogReaderAdapter (LR) user (Common User)in Oracle Container Database:
-- Note you can use any oracle user here and use the same user and password while creating remote source.
-- Note with this, you may not grant select on permission to browse other owner tables.
CREATE USER C##LR_USER IDENTIFIED BY <_replace_with_password>;

GRANT UNLIMITED TABLESPACE TO C##LR_USER;

-- Grant the LR user the required privileges:
GRANT CREATE SESSION to C##LR_USER;
GRANT LOGMINING to C##LR_USER;
GRANT EXECUTE_CATALOG_ROLE to C##LR_USER;
GRANT SELECT ANY TRANSACTION to C##LR_USER;
GRANT SELECT_CATALOG_ROLE TO C##LR_USER;
GRANT CREATE DATABASE LINK to C##LR_USER;
GRANT CREATE TABLE to C##LR_USER;
GRANT CREATE VIEW to C##LR_USER;
GRANT SET CONTAINER TO C##LR_USER;

-- Note following privileges are required in EXECUTE_CATALOG_ROLE role.
-- You can grant following privileges instead of EXECUTE_CATALOG_ROLE role.
--GRANT EXECUTE ON SYS.DBMS_LOGMNR TO C##LR_USER;
--GRANT EXECUTE ON SYS.DBMS_LOGMNR_D TO C##LR_USER;

-- Note following privileges are required in SELECT_CATALOG_ROLE role.
-- You can grant following privileges instead of SELECT_CATALOG_ROLE role.
--GRANT SELECT ON SYS.DBA_LOG_GROUPS TO C##LR_USER;
--GRANT SELECT ON SYS.V_$DATABASE TO C##LR_USER;
--GRANT SELECT ON SYS.V_$INSTANCE TO C##LR_USER;
--GRANT SELECT ON SYS.V_$LOG TO C##LR_USER;
--GRANT SELECT ON SYS.V_$LOGMNR_CONTENTS TO C##LR_USER;
--GRANT SELECT ON SYS.V_$LOGMNR_LOGS TO C##LR_USER;